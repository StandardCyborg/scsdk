// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: standard_cyborg/proto/math/transform.proto

#include "standard_cyborg/proto/math/transform.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_standard_5fcyborg_2fproto_2fmath_2fcore_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Quaternion_standard_5fcyborg_2fproto_2fmath_2fcore_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_standard_5fcyborg_2fproto_2fmath_2fcore_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vec3_standard_5fcyborg_2fproto_2fmath_2fcore_2eproto;
namespace standard_cyborg {
namespace proto {
namespace math {
class TransformDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Transform> _instance;
} _Transform_default_instance_;
}  // namespace math
}  // namespace proto
}  // namespace standard_cyborg
static void InitDefaultsscc_info_Transform_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::standard_cyborg::proto::math::_Transform_default_instance_;
    new (ptr) ::standard_cyborg::proto::math::Transform();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::standard_cyborg::proto::math::Transform::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Transform_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Transform_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto}, {
      &scc_info_Quaternion_standard_5fcyborg_2fproto_2fmath_2fcore_2eproto.base,
      &scc_info_Vec3_standard_5fcyborg_2fproto_2fmath_2fcore_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::standard_cyborg::proto::math::Transform, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::standard_cyborg::proto::math::Transform, rotation_),
  PROTOBUF_FIELD_OFFSET(::standard_cyborg::proto::math::Transform, translation_),
  PROTOBUF_FIELD_OFFSET(::standard_cyborg::proto::math::Transform, src_frame_),
  PROTOBUF_FIELD_OFFSET(::standard_cyborg::proto::math::Transform, dest_frame_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::standard_cyborg::proto::math::Transform)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::standard_cyborg::proto::math::_Transform_default_instance_),
};

const char descriptor_table_protodef_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n*standard_cyborg/proto/math/transform.p"
  "roto\022\032standard_cyborg.proto.math\032%standa"
  "rd_cyborg/proto/math/core.proto\"\243\001\n\tTran"
  "sform\0228\n\010rotation\030\001 \001(\0132&.standard_cybor"
  "g.proto.math.Quaternion\0225\n\013translation\030\002"
  " \001(\0132 .standard_cyborg.proto.math.Vec3\022\021"
  "\n\tsrc_frame\030\003 \001(\t\022\022\n\ndest_frame\030\004 \001(\tb\006p"
  "roto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto_deps[1] = {
  &::descriptor_table_standard_5fcyborg_2fproto_2fmath_2fcore_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto_sccs[1] = {
  &scc_info_Transform_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto_once;
static bool descriptor_table_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto = {
  &descriptor_table_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto_initialized, descriptor_table_protodef_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto, "standard_cyborg/proto/math/transform.proto", 285,
  &descriptor_table_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto_once, descriptor_table_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto_sccs, descriptor_table_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto_deps, 1, 1,
  schemas, file_default_instances, TableStruct_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto::offsets,
  file_level_metadata_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto, 1, file_level_enum_descriptors_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto, file_level_service_descriptors_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto), true);
namespace standard_cyborg {
namespace proto {
namespace math {

// ===================================================================

void Transform::InitAsDefaultInstance() {
  ::standard_cyborg::proto::math::_Transform_default_instance_._instance.get_mutable()->rotation_ = const_cast< ::standard_cyborg::proto::math::Quaternion*>(
      ::standard_cyborg::proto::math::Quaternion::internal_default_instance());
  ::standard_cyborg::proto::math::_Transform_default_instance_._instance.get_mutable()->translation_ = const_cast< ::standard_cyborg::proto::math::Vec3*>(
      ::standard_cyborg::proto::math::Vec3::internal_default_instance());
}
class Transform::_Internal {
 public:
  static const ::standard_cyborg::proto::math::Quaternion& rotation(const Transform* msg);
  static const ::standard_cyborg::proto::math::Vec3& translation(const Transform* msg);
};

const ::standard_cyborg::proto::math::Quaternion&
Transform::_Internal::rotation(const Transform* msg) {
  return *msg->rotation_;
}
const ::standard_cyborg::proto::math::Vec3&
Transform::_Internal::translation(const Transform* msg) {
  return *msg->translation_;
}
void Transform::clear_rotation() {
  if (GetArenaNoVirtual() == nullptr && rotation_ != nullptr) {
    delete rotation_;
  }
  rotation_ = nullptr;
}
void Transform::clear_translation() {
  if (GetArenaNoVirtual() == nullptr && translation_ != nullptr) {
    delete translation_;
  }
  translation_ = nullptr;
}
Transform::Transform()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:standard_cyborg.proto.math.Transform)
}
Transform::Transform(const Transform& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  src_frame_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_src_frame().empty()) {
    src_frame_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.src_frame_);
  }
  dest_frame_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_dest_frame().empty()) {
    dest_frame_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.dest_frame_);
  }
  if (from._internal_has_rotation()) {
    rotation_ = new ::standard_cyborg::proto::math::Quaternion(*from.rotation_);
  } else {
    rotation_ = nullptr;
  }
  if (from._internal_has_translation()) {
    translation_ = new ::standard_cyborg::proto::math::Vec3(*from.translation_);
  } else {
    translation_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:standard_cyborg.proto.math.Transform)
}

void Transform::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Transform_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto.base);
  src_frame_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dest_frame_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&rotation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&translation_) -
      reinterpret_cast<char*>(&rotation_)) + sizeof(translation_));
}

Transform::~Transform() {
  // @@protoc_insertion_point(destructor:standard_cyborg.proto.math.Transform)
  SharedDtor();
}

void Transform::SharedDtor() {
  src_frame_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dest_frame_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete rotation_;
  if (this != internal_default_instance()) delete translation_;
}

void Transform::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Transform& Transform::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Transform_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto.base);
  return *internal_default_instance();
}


void Transform::Clear() {
// @@protoc_insertion_point(message_clear_start:standard_cyborg.proto.math.Transform)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  src_frame_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dest_frame_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && rotation_ != nullptr) {
    delete rotation_;
  }
  rotation_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && translation_ != nullptr) {
    delete translation_;
  }
  translation_ = nullptr;
  _internal_metadata_.Clear();
}

const char* Transform::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .standard_cyborg.proto.math.Quaternion rotation = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_rotation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .standard_cyborg.proto.math.Vec3 translation = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_translation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string src_frame = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_src_frame();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "standard_cyborg.proto.math.Transform.src_frame"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string dest_frame = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_dest_frame();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "standard_cyborg.proto.math.Transform.dest_frame"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Transform::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:standard_cyborg.proto.math.Transform)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .standard_cyborg.proto.math.Quaternion rotation = 1;
  if (this->has_rotation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::rotation(this), target, stream);
  }

  // .standard_cyborg.proto.math.Vec3 translation = 2;
  if (this->has_translation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::translation(this), target, stream);
  }

  // string src_frame = 3;
  if (this->src_frame().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_src_frame().data(), static_cast<int>(this->_internal_src_frame().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "standard_cyborg.proto.math.Transform.src_frame");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_src_frame(), target);
  }

  // string dest_frame = 4;
  if (this->dest_frame().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dest_frame().data(), static_cast<int>(this->_internal_dest_frame().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "standard_cyborg.proto.math.Transform.dest_frame");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_dest_frame(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:standard_cyborg.proto.math.Transform)
  return target;
}

size_t Transform::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:standard_cyborg.proto.math.Transform)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string src_frame = 3;
  if (this->src_frame().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_src_frame());
  }

  // string dest_frame = 4;
  if (this->dest_frame().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dest_frame());
  }

  // .standard_cyborg.proto.math.Quaternion rotation = 1;
  if (this->has_rotation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *rotation_);
  }

  // .standard_cyborg.proto.math.Vec3 translation = 2;
  if (this->has_translation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *translation_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Transform::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:standard_cyborg.proto.math.Transform)
  GOOGLE_DCHECK_NE(&from, this);
  const Transform* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Transform>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:standard_cyborg.proto.math.Transform)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:standard_cyborg.proto.math.Transform)
    MergeFrom(*source);
  }
}

void Transform::MergeFrom(const Transform& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:standard_cyborg.proto.math.Transform)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.src_frame().size() > 0) {

    src_frame_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.src_frame_);
  }
  if (from.dest_frame().size() > 0) {

    dest_frame_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.dest_frame_);
  }
  if (from.has_rotation()) {
    _internal_mutable_rotation()->::standard_cyborg::proto::math::Quaternion::MergeFrom(from._internal_rotation());
  }
  if (from.has_translation()) {
    _internal_mutable_translation()->::standard_cyborg::proto::math::Vec3::MergeFrom(from._internal_translation());
  }
}

void Transform::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:standard_cyborg.proto.math.Transform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Transform::CopyFrom(const Transform& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:standard_cyborg.proto.math.Transform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Transform::IsInitialized() const {
  return true;
}

void Transform::InternalSwap(Transform* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  src_frame_.Swap(&other->src_frame_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  dest_frame_.Swap(&other->dest_frame_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(rotation_, other->rotation_);
  swap(translation_, other->translation_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Transform::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace math
}  // namespace proto
}  // namespace standard_cyborg
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::standard_cyborg::proto::math::Transform* Arena::CreateMaybeMessage< ::standard_cyborg::proto::math::Transform >(Arena* arena) {
  return Arena::CreateInternal< ::standard_cyborg::proto::math::Transform >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
