// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: standard_cyborg/proto/math/transform.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "standard_cyborg/proto/math/core.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto;
namespace standard_cyborg {
namespace proto {
namespace math {
class Transform;
class TransformDefaultTypeInternal;
extern TransformDefaultTypeInternal _Transform_default_instance_;
}  // namespace math
}  // namespace proto
}  // namespace standard_cyborg
PROTOBUF_NAMESPACE_OPEN
template<> ::standard_cyborg::proto::math::Transform* Arena::CreateMaybeMessage<::standard_cyborg::proto::math::Transform>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace standard_cyborg {
namespace proto {
namespace math {

// ===================================================================

class Transform :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:standard_cyborg.proto.math.Transform) */ {
 public:
  Transform();
  virtual ~Transform();

  Transform(const Transform& from);
  Transform(Transform&& from) noexcept
    : Transform() {
    *this = ::std::move(from);
  }

  inline Transform& operator=(const Transform& from) {
    CopyFrom(from);
    return *this;
  }
  inline Transform& operator=(Transform&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Transform& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Transform* internal_default_instance() {
    return reinterpret_cast<const Transform*>(
               &_Transform_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Transform& a, Transform& b) {
    a.Swap(&b);
  }
  inline void Swap(Transform* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Transform* New() const final {
    return CreateMaybeMessage<Transform>(nullptr);
  }

  Transform* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Transform>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Transform& from);
  void MergeFrom(const Transform& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Transform* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "standard_cyborg.proto.math.Transform";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto);
    return ::descriptor_table_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSrcFrameFieldNumber = 3,
    kDestFrameFieldNumber = 4,
    kRotationFieldNumber = 1,
    kTranslationFieldNumber = 2,
  };
  // string src_frame = 3;
  void clear_src_frame();
  const std::string& src_frame() const;
  void set_src_frame(const std::string& value);
  void set_src_frame(std::string&& value);
  void set_src_frame(const char* value);
  void set_src_frame(const char* value, size_t size);
  std::string* mutable_src_frame();
  std::string* release_src_frame();
  void set_allocated_src_frame(std::string* src_frame);
  private:
  const std::string& _internal_src_frame() const;
  void _internal_set_src_frame(const std::string& value);
  std::string* _internal_mutable_src_frame();
  public:

  // string dest_frame = 4;
  void clear_dest_frame();
  const std::string& dest_frame() const;
  void set_dest_frame(const std::string& value);
  void set_dest_frame(std::string&& value);
  void set_dest_frame(const char* value);
  void set_dest_frame(const char* value, size_t size);
  std::string* mutable_dest_frame();
  std::string* release_dest_frame();
  void set_allocated_dest_frame(std::string* dest_frame);
  private:
  const std::string& _internal_dest_frame() const;
  void _internal_set_dest_frame(const std::string& value);
  std::string* _internal_mutable_dest_frame();
  public:

  // .standard_cyborg.proto.math.Quaternion rotation = 1;
  bool has_rotation() const;
  private:
  bool _internal_has_rotation() const;
  public:
  void clear_rotation();
  const ::standard_cyborg::proto::math::Quaternion& rotation() const;
  ::standard_cyborg::proto::math::Quaternion* release_rotation();
  ::standard_cyborg::proto::math::Quaternion* mutable_rotation();
  void set_allocated_rotation(::standard_cyborg::proto::math::Quaternion* rotation);
  private:
  const ::standard_cyborg::proto::math::Quaternion& _internal_rotation() const;
  ::standard_cyborg::proto::math::Quaternion* _internal_mutable_rotation();
  public:

  // .standard_cyborg.proto.math.Vec3 translation = 2;
  bool has_translation() const;
  private:
  bool _internal_has_translation() const;
  public:
  void clear_translation();
  const ::standard_cyborg::proto::math::Vec3& translation() const;
  ::standard_cyborg::proto::math::Vec3* release_translation();
  ::standard_cyborg::proto::math::Vec3* mutable_translation();
  void set_allocated_translation(::standard_cyborg::proto::math::Vec3* translation);
  private:
  const ::standard_cyborg::proto::math::Vec3& _internal_translation() const;
  ::standard_cyborg::proto::math::Vec3* _internal_mutable_translation();
  public:

  // @@protoc_insertion_point(class_scope:standard_cyborg.proto.math.Transform)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr src_frame_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dest_frame_;
  ::standard_cyborg::proto::math::Quaternion* rotation_;
  ::standard_cyborg::proto::math::Vec3* translation_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Transform

// .standard_cyborg.proto.math.Quaternion rotation = 1;
inline bool Transform::_internal_has_rotation() const {
  return this != internal_default_instance() && rotation_ != nullptr;
}
inline bool Transform::has_rotation() const {
  return _internal_has_rotation();
}
inline const ::standard_cyborg::proto::math::Quaternion& Transform::_internal_rotation() const {
  const ::standard_cyborg::proto::math::Quaternion* p = rotation_;
  return p != nullptr ? *p : *reinterpret_cast<const ::standard_cyborg::proto::math::Quaternion*>(
      &::standard_cyborg::proto::math::_Quaternion_default_instance_);
}
inline const ::standard_cyborg::proto::math::Quaternion& Transform::rotation() const {
  // @@protoc_insertion_point(field_get:standard_cyborg.proto.math.Transform.rotation)
  return _internal_rotation();
}
inline ::standard_cyborg::proto::math::Quaternion* Transform::release_rotation() {
  // @@protoc_insertion_point(field_release:standard_cyborg.proto.math.Transform.rotation)
  
  ::standard_cyborg::proto::math::Quaternion* temp = rotation_;
  rotation_ = nullptr;
  return temp;
}
inline ::standard_cyborg::proto::math::Quaternion* Transform::_internal_mutable_rotation() {
  
  if (rotation_ == nullptr) {
    auto* p = CreateMaybeMessage<::standard_cyborg::proto::math::Quaternion>(GetArenaNoVirtual());
    rotation_ = p;
  }
  return rotation_;
}
inline ::standard_cyborg::proto::math::Quaternion* Transform::mutable_rotation() {
  // @@protoc_insertion_point(field_mutable:standard_cyborg.proto.math.Transform.rotation)
  return _internal_mutable_rotation();
}
inline void Transform::set_allocated_rotation(::standard_cyborg::proto::math::Quaternion* rotation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rotation_);
  }
  if (rotation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      rotation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rotation, submessage_arena);
    }
    
  } else {
    
  }
  rotation_ = rotation;
  // @@protoc_insertion_point(field_set_allocated:standard_cyborg.proto.math.Transform.rotation)
}

// .standard_cyborg.proto.math.Vec3 translation = 2;
inline bool Transform::_internal_has_translation() const {
  return this != internal_default_instance() && translation_ != nullptr;
}
inline bool Transform::has_translation() const {
  return _internal_has_translation();
}
inline const ::standard_cyborg::proto::math::Vec3& Transform::_internal_translation() const {
  const ::standard_cyborg::proto::math::Vec3* p = translation_;
  return p != nullptr ? *p : *reinterpret_cast<const ::standard_cyborg::proto::math::Vec3*>(
      &::standard_cyborg::proto::math::_Vec3_default_instance_);
}
inline const ::standard_cyborg::proto::math::Vec3& Transform::translation() const {
  // @@protoc_insertion_point(field_get:standard_cyborg.proto.math.Transform.translation)
  return _internal_translation();
}
inline ::standard_cyborg::proto::math::Vec3* Transform::release_translation() {
  // @@protoc_insertion_point(field_release:standard_cyborg.proto.math.Transform.translation)
  
  ::standard_cyborg::proto::math::Vec3* temp = translation_;
  translation_ = nullptr;
  return temp;
}
inline ::standard_cyborg::proto::math::Vec3* Transform::_internal_mutable_translation() {
  
  if (translation_ == nullptr) {
    auto* p = CreateMaybeMessage<::standard_cyborg::proto::math::Vec3>(GetArenaNoVirtual());
    translation_ = p;
  }
  return translation_;
}
inline ::standard_cyborg::proto::math::Vec3* Transform::mutable_translation() {
  // @@protoc_insertion_point(field_mutable:standard_cyborg.proto.math.Transform.translation)
  return _internal_mutable_translation();
}
inline void Transform::set_allocated_translation(::standard_cyborg::proto::math::Vec3* translation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(translation_);
  }
  if (translation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      translation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, translation, submessage_arena);
    }
    
  } else {
    
  }
  translation_ = translation;
  // @@protoc_insertion_point(field_set_allocated:standard_cyborg.proto.math.Transform.translation)
}

// string src_frame = 3;
inline void Transform::clear_src_frame() {
  src_frame_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Transform::src_frame() const {
  // @@protoc_insertion_point(field_get:standard_cyborg.proto.math.Transform.src_frame)
  return _internal_src_frame();
}
inline void Transform::set_src_frame(const std::string& value) {
  _internal_set_src_frame(value);
  // @@protoc_insertion_point(field_set:standard_cyborg.proto.math.Transform.src_frame)
}
inline std::string* Transform::mutable_src_frame() {
  // @@protoc_insertion_point(field_mutable:standard_cyborg.proto.math.Transform.src_frame)
  return _internal_mutable_src_frame();
}
inline const std::string& Transform::_internal_src_frame() const {
  return src_frame_.GetNoArena();
}
inline void Transform::_internal_set_src_frame(const std::string& value) {
  
  src_frame_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Transform::set_src_frame(std::string&& value) {
  
  src_frame_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:standard_cyborg.proto.math.Transform.src_frame)
}
inline void Transform::set_src_frame(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  src_frame_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:standard_cyborg.proto.math.Transform.src_frame)
}
inline void Transform::set_src_frame(const char* value, size_t size) {
  
  src_frame_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:standard_cyborg.proto.math.Transform.src_frame)
}
inline std::string* Transform::_internal_mutable_src_frame() {
  
  return src_frame_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Transform::release_src_frame() {
  // @@protoc_insertion_point(field_release:standard_cyborg.proto.math.Transform.src_frame)
  
  return src_frame_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Transform::set_allocated_src_frame(std::string* src_frame) {
  if (src_frame != nullptr) {
    
  } else {
    
  }
  src_frame_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), src_frame);
  // @@protoc_insertion_point(field_set_allocated:standard_cyborg.proto.math.Transform.src_frame)
}

// string dest_frame = 4;
inline void Transform::clear_dest_frame() {
  dest_frame_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Transform::dest_frame() const {
  // @@protoc_insertion_point(field_get:standard_cyborg.proto.math.Transform.dest_frame)
  return _internal_dest_frame();
}
inline void Transform::set_dest_frame(const std::string& value) {
  _internal_set_dest_frame(value);
  // @@protoc_insertion_point(field_set:standard_cyborg.proto.math.Transform.dest_frame)
}
inline std::string* Transform::mutable_dest_frame() {
  // @@protoc_insertion_point(field_mutable:standard_cyborg.proto.math.Transform.dest_frame)
  return _internal_mutable_dest_frame();
}
inline const std::string& Transform::_internal_dest_frame() const {
  return dest_frame_.GetNoArena();
}
inline void Transform::_internal_set_dest_frame(const std::string& value) {
  
  dest_frame_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Transform::set_dest_frame(std::string&& value) {
  
  dest_frame_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:standard_cyborg.proto.math.Transform.dest_frame)
}
inline void Transform::set_dest_frame(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  dest_frame_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:standard_cyborg.proto.math.Transform.dest_frame)
}
inline void Transform::set_dest_frame(const char* value, size_t size) {
  
  dest_frame_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:standard_cyborg.proto.math.Transform.dest_frame)
}
inline std::string* Transform::_internal_mutable_dest_frame() {
  
  return dest_frame_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Transform::release_dest_frame() {
  // @@protoc_insertion_point(field_release:standard_cyborg.proto.math.Transform.dest_frame)
  
  return dest_frame_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Transform::set_allocated_dest_frame(std::string* dest_frame) {
  if (dest_frame != nullptr) {
    
  } else {
    
  }
  dest_frame_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), dest_frame);
  // @@protoc_insertion_point(field_set_allocated:standard_cyborg.proto.math.Transform.dest_frame)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace math
}  // namespace proto
}  // namespace standard_cyborg

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_standard_5fcyborg_2fproto_2fmath_2ftransform_2eproto
