// Copyright 2020 Standard Cyborg
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "standard_cyborg/proto/sc3d/polyline.proto";
import "standard_cyborg/proto/sc3d/image.proto";
import "standard_cyborg/proto/sc3d/perspective_camera.proto";
import "standard_cyborg/proto/sc3d/point_cloud.proto";
import "standard_cyborg/proto/sc3d/triangle_mesh.proto";
import "standard_cyborg/proto/sc3d/plane.proto";
import "standard_cyborg/proto/sc3d/landmark.proto";

import "standard_cyborg/proto/math/core.proto";

package standard_cyborg.proto.scene_graph;

// A Scene graph node
message SceneGraphNode {
  string nodeName = 2;
  // Object color, as an rgb triplet in linear color space
  math.Vec3 objectColor = 3;
  int32 materialModel = 4;

  repeated int32 children = 6;  

  oneof contents {
    sc3d.Polyline polyline = 20;
    sc3d.Image image = 21;
    sc3d.PinholeCamera pinholeCamera = 22;

    sc3d.PointCloud pointCloud = 23;
    sc3d.TriangleMesh triangleMesh = 24;

    sc3d.Plane plane = 25;
    sc3d.Landmark landmark = 26;

    bool isGenericNode = 27;
    bool isCoordinateFrameNode = 28;
    math.Vec3 pointPosition = 29;
    
  }  
}
